{"version":3,"sources":["constants.ts","draw/helpers.ts","draw/board.ts","draw/input.ts","app.ts"],"names":[],"mappings":"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,GCOW,CAAT,EAAqB,KDPZ,GAAG,ACOiB,CAAC,QDPhC,WAAc,CACzB,GADyB,EAEzB,EAFyB,EAEgB;ACKI,QAAA,CAAC,EAAE,CAAC,GAAG,CAAT;AC1B7C,AD0ByD,IC1BzD,ID0ByD,CAAC,EC1B1D,AD0B0D,GC1B1D,OAAA,CAAA,cAAA,CAAA;AD0B6C,MDLzC,CCKwC,CAA7B,CAAT,EDLG,GAAA,EAAA,CAAA;AEpBT,AD0BK,IC1BL,CDwBI,CDJO,KEpBX,AFoBgB,ACML,GC1BX,AFoBgB,EAAA,CAAA,IEpBhB,CAAA,cAAA,CAAA;AD2BM,MDPY,ACOZ,KDPiB,CCOX,EDPW,CCOR,CDPQ,ACOP,CDPO,OCOC,CAAC;ACzBzB,ADyB2B,ICzBrB,EFkBmB,ECOE,CCzBhB,AFkBiB,ACOA,EAAA,CCzBF,AFkBE,ACOH,EDPG,CAAA;AEjB1B,ADwB4B,ECxB5B,IFiB4B,CEjBvB,CDwBuB,CCxBrB,ADwBsB,CDPG,CElBR,ADyBK,EDPG,EAAA,CAAA;AEhBhC,AFkBA,ACKuB,ECvBvB,AFkBA,GAAG,CAAC,CElBC,ADuBiB,CAAT,CCvBN,CDuB2B,GCvBvB,EFkBX,CElBO,AFkBO,CAAd,CCK0C,CDLzB,ACK0B,CDL3C,EAAoB,GAApB,EAAyB,GAAzB;AEpBwB,ADyBqB,CCzB/C,ODyB+C,CAAC,EAAA,CAAH;AClB7C,ADkBkD,QAAA,CAAC,CClBzC,CAAC,ADkB0C,CAAC,GAAG,CClBzD,GAAmB,KAAnB;AACM,AFaJ,ACI2C,ICjBvC,EAAA,CDiBsC,CAA7B,CCjBU,ADiBnB,UCjB6B,CAAC,KAA9B;AAAA,AFcJ,ACIG,IClBG,KAAK,AFcM,GEdN,CFcM,CEdN,CAAA,KAAP,AFca,GAAA,QAAA,CAAA,KAAA,CAAA,EAAK,SAAA,GAAA,OAAA,CAAA,IAAA,EAAtB,EAAsB,CAAA,SAAA,CAAA,IAAtB,EAAsB,SAAA,GAAA,OAAA,CAAA,IAAA,EAAtB,EAAwB;AEdpB,AFcC,IEdQ,KAAK,CFcT,EEdS,EAAA,AFcL,CEdK,EFcL,GEdT,EAEN,IFYe,CAAA,KAAR;AACH,ACIA,ODJA,CCII,CAAC,CDJL,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","file":"app.c61986b1.js","sourceRoot":"../src","sourcesContent":["export const SPACE = 60;\nexport const DOT_SIZE = 10;\nexport const PADDING = 30;\n\nexport type Joins = { [key: string]: Join };\n\nexport type JoinPointer = {\n  x: number;\n  y: number;\n};\n\nexport type Join = JoinPointer & {\n  lines: Set<Line>;\n};\n\nexport type Line = {\n  points: [Join, Join];\n};\n\nexport type Board = NonNullable<InputBoard> & {\n  path: Set<Line>;\n};\n\nexport type InputBoard = {\n  lines?: Set<Line>;\n  joins?: Joins;\n  start?: Join;\n  end?: Join;\n};\n","import { DOT_SIZE, Join, Line, PADDING, SPACE } from \"../constants\";\n\nexport const drawLine = (\n  ctx: CanvasRenderingContext2D,\n  color: string = \"black\",\n  { points: [from, to] }: Line\n) => {\n  ctx.lineWidth = 10;\n  ctx.strokeStyle = color;\n  ctx.beginPath();\n  ctx.moveTo(\n    DOT_SIZE - PADDING + (from.x + 1) * SPACE,\n    DOT_SIZE - PADDING + (from.y + 1) * SPACE\n  );\n  ctx.lineTo(\n    DOT_SIZE - PADDING + (to.x + 1) * SPACE,\n    DOT_SIZE - PADDING + (to.y + 1) * SPACE\n  );\n  ctx.closePath();\n  ctx.stroke();\n};\n\nexport const drawDot = (ctx: CanvasRenderingContext2D, { x, y }: Join) => {\n  ctx.fillRect(\n    DOT_SIZE / 2 - PADDING + (x + 1) * SPACE,\n    DOT_SIZE / 2 - PADDING + (y + 1) * SPACE,\n    DOT_SIZE,\n    DOT_SIZE\n  );\n};\n","import { Board } from \"../constants\";\nimport { drawLine, drawDot } from \"./helpers\";\n\nexport const getCanvas = (id: number | string): HTMLCanvasElement => {\n  let canvas = document.getElementById(`cv-${id}`) as HTMLCanvasElement;\n  if (canvas) {\n    return canvas;\n  }\n  canvas = document.createElement(\"canvas\");\n  document.querySelector(\"x-canvas\").appendChild(canvas);\n  canvas.width = 400;\n  canvas.height = 400;\n  return canvas;\n};\n\nexport const drawBoard = (board: Board) => {\n  const ctx = getCanvas(Math.random()).getContext(\"2d\");\n  drawBoardAt(ctx, board);\n};\n\nexport const drawBoardAt = (\n  ctx: CanvasRenderingContext2D,\n  { lines, joins, start, end, path }: Board\n) => {\n  ctx.clearRect(0, 0, 400, 400);\n  // DRAW LINES\n  for (let line of lines) {\n    drawLine(ctx, \"black\", line);\n  }\n  for (let [_, join] of Object.entries(joins)) {\n    drawDot(ctx, join);\n  }\n  ctx.fillStyle = \"blue\";\n  drawDot(ctx, start);\n  ctx.fillStyle = \"yellow\";\n  drawDot(ctx, end);\n\n  ctx.lineWidth = 10;\n  for (let line of path) {\n    drawLine(ctx, \"lime\", line);\n  }\n  ctx.lineWidth = 1;\n};\n","import { drawLine } from \"./helpers\";\nimport { Join, JoinPointer, Line, PADDING, SPACE } from \"./../constants\";\nimport { InputBoard } from \"../constants\";\nimport { getCanvas, drawBoardAt } from \"./board\";\n\nexport const startInput = () => {\n  const { joins, lines, start, end } = globalThis.input as InputBoard;\n\n  const findJoin = ({ x, y }: JoinPointer): Join | null => {\n    if (joins[`${x},${y}`] != null) {\n      return joins[`${x},${y}`];\n    } else {\n      return null;\n    }\n  };\n\n  const $input = getCanvas(\"input\");\n  const ctx = $input.getContext(\"2d\");\n  let ghostLine: Line = null;\n  $input.addEventListener(\"mousemove\", (ev) => {\n    const [rawX, rawY] = [\n      (ev.offsetX - PADDING) / SPACE - 0.0,\n      (ev.offsetY - PADDING) / SPACE - 0.0,\n    ];\n    const [x, y] = [rawX, rawY].map(Math.floor);\n    let points;\n    if (rawX - x > rawY - y) {\n      points = [findJoin({ x, y }), findJoin({ x: x + 1, y })];\n    } else {\n      points = [findJoin({ x, y }), findJoin({ x, y: y + 1 })];\n    }\n    if (!points.includes(null)) {\n      ghostLine = {\n        points,\n      };\n    }\n  });\n  document.querySelector(\"x-input\").appendChild($input);\n  const draw = () => {\n    drawBoardAt(ctx, {\n      lines,\n      joins,\n      path: new Set(),\n      start,\n      end,\n    });\n\n    if (ghostLine) {\n      drawLine(ctx, \"blue\", ghostLine);\n    }\n    requestAnimationFrame(draw);\n  };\n  requestAnimationFrame(draw);\n};\n","import { Join, Joins, JoinPointer, Line, Board, InputBoard } from \"./constants\";\nimport { drawBoard, drawBoardAt, getCanvas } from \"./draw/board\";\nimport { startInput } from \"./draw/input\";\n\nconst input: InputBoard = {\n  joins: {},\n  lines: new Set(),\n};\ndeclare module globalThis {\n  let input: InputBoard;\n}\nglobalThis.input = input;\nconst { joins, lines } = globalThis.input;\n\n// HARDCODE JOINS\nfor (let x = 0; x <= 4; x++) {\n  for (let y = 0; y <= 4; y++) {\n    joins[`${x},${y}`] = {\n      x,\n      y,\n      lines: new Set(),\n    };\n  }\n}\n\nconst findJoin = ({ x, y }: JoinPointer): Join | null => {\n  if (joins[`${x},${y}`] != null) {\n    return joins[`${x},${y}`];\n  } else {\n    return null;\n  }\n};\n\n// HC LINES\nfor (let [key, join] of Object.entries(joins)) {\n  const { x, y } = join;\n  const nextLines = [findJoin({ x: x + 1, y }), findJoin({ x, y: y + 1 })];\n  for (let nextLine of nextLines) {\n    if (nextLine == null) {\n      continue;\n    }\n    if (join.x === 1 && join.y === 0 && nextLine.x === 1 && nextLine.y === 1) {\n      continue;\n    }\n    if (join.x === 1 && join.y === 3 && nextLine.x === 1 && nextLine.y === 4) {\n      continue;\n    }\n    const line: Line = {\n      points: [join, nextLine],\n    };\n    lines.add(line);\n    join.lines.add(line);\n    nextLine.lines.add(line);\n  }\n}\n\nglobalThis.input.start = findJoin({ x: 2, y: 2 });\nglobalThis.input.end = findJoin({ x: 4, y: 0 });\n\nconst getOtherJoinInLine = (line: Line, join: Join): Join => {\n  if (!line.points.includes(join)) {\n    alert(12);\n    throw \"nooo\";\n  }\n  return line.points.filter((point) => point != join)[0];\n};\n\nconst getNextLines = (path: Line[], join: Join) => {\n  let taken: Join[] = [];\n  path.forEach((line) => {\n    for (let point of line.points) {\n      taken.push(point);\n    }\n  });\n  taken = taken.filter((j) => j !== join);\n  const lines = [...join.lines]\n    .filter((line) => !path.includes(line))\n    .filter((line) => {\n      if (taken.some((takenPoint) => line.points.includes(takenPoint))) {\n        return false;\n      }\n      return true;\n    });\n  return lines;\n};\n\ntype Path = {\n  lines: Line[];\n  at: Join;\n  isFinished: boolean;\n  isSolved: boolean;\n};\n\nlet paths: Path[] = getNextLines([], globalThis.input.start).map((line) => {\n  return {\n    lines: [line],\n    at: getOtherJoinInLine(line, globalThis.input.start),\n    isFinished: false,\n    isSolved: false,\n  };\n});\nconst loop = () => {\n  const nextPaths = [];\n  for (let path of paths) {\n    if (path.isFinished) {\n      nextPaths.push(path);\n      continue;\n    }\n    if (path.isSolved) {\n      nextPaths.push(path);\n      continue;\n    }\n    let lines = getNextLines(path.lines, path.at);\n    if (lines.length === 0) {\n      nextPaths.push({\n        ...path,\n        isFinished: true,\n        isSolved: false,\n      });\n      continue;\n    }\n\n    for (let line of lines) {\n      const to = getOtherJoinInLine(line, path.at);\n      nextPaths.push({\n        lines: [...path.lines, line],\n        at: to,\n        isFinished: false,\n        isSolved: to === globalThis.input.end,\n      });\n    }\n  }\n\n  const tbd =\n    nextPaths.length -\n    nextPaths.filter((p) => p.isFinished || p.isSolved).length;\n\n  console.log(`${nextPaths.length} paths total`);\n  console.log(`${tbd} paths TBD`);\n  console.log(`${nextPaths.filter((p) => p.isFinished).length} finished paths`);\n  console.log(`${nextPaths.filter((p) => p.isSolved).length} solved paths`);\n  console.log(`${100 - (tbd / nextPaths.length) * 100}% solved`);\n\n  paths = nextPaths;\n};\n\nstartInput();\n\nconst draw = () => {\n  document.querySelector(\"x-canvas\").innerHTML = \"\";\n  for (let path of paths.sort((a, b) => a.lines.length - b.lines.length)) {\n    if (path.isSolved !== true) {\n      continue;\n    }\n    console.log(path);\n    drawBoard({\n      lines,\n      joins,\n      path: new Set(path.lines),\n      start: globalThis.input.start,\n      end: globalThis.input.end,\n    });\n  }\n};\n\nconst $next = document.createElement(\"button\");\n$next.innerText = \"next\";\n$next.onclick = () => {\n  loop();\n};\ndocument.querySelector(\"x-tools\").appendChild($next);\n\nconst $draw = document.createElement(\"button\");\n$draw.innerText = \"draw\";\n$draw.onclick = () => {\n  draw();\n};\ndocument.querySelector(\"x-tools\").appendChild($draw);\n"]}